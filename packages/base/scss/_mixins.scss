// @argentinafreelance/base

@use "sass:list";

// Media of at least the minimum breakpoint width.
// No query for the smallest breakpoint.
// -----------------------------------------------------------------------------

@mixin superior-to($name) {
    $min: breakpoint-min($name);

    @if $min {
        @media (min-width: $min) {
            @content;
        }
    } @else {
        @content;
    }
}

// Media of at most the maximum breakpoint width.
// No query for the largest breakpoint.
// -----------------------------------------------------------------------------

@mixin inferior-to($name) {
    $max: breakpoint-max($name);

    @if $max {
        @media (max-width: $max) {
            @content;
        }
    } @else {
        @content;
    }
}

// Media that spans multiple breakpoint widths.
// -----------------------------------------------------------------------------

@mixin between($lower, $upper) {
    $min: breakpoint-min($lower);
    $max: breakpoint-max($upper);

    @if $min != null and $max != null {
        @media (min-width: $min) and (max-width: $max) {
            @content;
        }
    } @else if $max == null {
        @include superior-to($lower) {
            @content;
        }
    } @else if $min == null {
        @include inferior-to($upper) {
            @content;
        }
    }
}

// Media between the breakpoint's minimum and maximum widths.
// -----------------------------------------------------------------------------

@mixin only($name) {
    $min: breakpoint-min($name);
    $max: breakpoint-max($name);

    @if $min != null and $max != null {
        @media (min-width: $min) and (max-width: $max) {
            @content;
        }
    } @else if $max == null {
        @include superior-to($name) {
            @content;
        }
    } @else if $min == null {
        @include inferior-to($name) {
            @content;
        }
    }
}

// Fixed utility
// -----------------------------------------------------------------------------

@mixin fixed {
    position: fixed;
    right: 0;
    left: 0;
    z-index: $zindex-fixed;
}

@mixin fixed-superior {
    @include fixed;

    top: 0;
}

@mixin fixed-inferior {
    @include fixed;

    bottom: 0;
}

// Stack utility
// -----------------------------------------------------------------------------

@mixin stack {
    display: flex;
    align-self: stretch;
}

@mixin hstack {
    @include stack;

    flex-direction: row;
    align-items: center;
}

@mixin vstack {
    @include stack;

    flex: 1 1 auto;
    flex-direction: column;
}

// Stretched link utility
// -----------------------------------------------------------------------------

@mixin stretched-link {
    &::after {
        content: "";
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        z-index: $zindex-stretched-link;
    }
}

// Text truncate utility
// -----------------------------------------------------------------------------

@mixin text-truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

// Visually hidden utility
// -----------------------------------------------------------------------------

@mixin visually-hidden {
    position: absolute;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    border: 0;
    white-space: nowrap;
}

// Input & buttons base
// -----------------------------------------------------------------------------

@mixin input-button-base(
    $display: $input-button-display,
    $font-weight: $input-button-font-weight,
    $font-family: $input-button-font-family,
    $transition: $input-button-transition,
    $disabled-opacity: $input-button-disabled-opacity,
    $disabled-cursor: $input-button-disabled-cursor
) {
    display: $display;
    font-weight: $font-weight;
    font-family: $font-family;
    transition: $transition;

    &:disabled {
        opacity: $disabled-opacity;
        cursor: $disabled-cursor;
    }
}

@mixin input-button-size(
    $width: $input-button-width,
    $padding: $input-button-padding,
    $border-width: $input-button-border-width,
    $border-radius: $input-button-border-radius,
    $font-size: $input-button-font-size,
    $line-height: $input-button-line-height
) {
    $height: calc($font-size * $line-height + list.nth($padding, 1) * 2 + $border-width * 2);

    width: $width;
    height: $height;
    padding: $padding;
    border-width: $border-width;
    border-radius: $border-radius;
    font-size: $font-size;
    line-height: $line-height;
}

// Inputs base
// -----------------------------------------------------------------------------

@mixin input-base {
    appearance: none;
}

@mixin input-variant(
    $border-color: $input-border-color,
    $background-color: $input-background-color,
    $color: $input-color,
    $focus-border-color: $input-focus-border-color,
    $focus-background-color: $input-focus-background-color,
    $focus-color: $input-focus-color,
    $focus-box-shadow: $input-focus-box-shadow
) {
    border-color: $border-color;
    background-color: $background-color;
    color: $color;

    &:focus:not(:disabled) {
        border-color: $focus-border-color;
        background-color: $focus-background-color;
        color: $focus-color;
        box-shadow: $focus-box-shadow;
    }
}

// Selects base
// -----------------------------------------------------------------------------

@mixin input-select(
    $padding-right: $select-padding-right,
    $caret-background-image: $select-caret-background-image,
    $caret-background-position: $select-caret-background-position,
    $caret-background-size: $select-caret-background-size,
    $multiple-height: $select-multiple-height
) {
    &:not([multiple]) {
        padding-right: $padding-right;
        background-image: $caret-background-image;
        background-position: right $caret-background-position center;
        background-size: $caret-background-size;
        background-repeat: no-repeat;
        print-color-adjust: exact;
    }

    &[multiple] {
        height: $multiple-height;
    }
}

// Textareas base
// -----------------------------------------------------------------------------

@mixin input-textarea($height: $textarea-height) {
    height: $height;
}

// Buttons base
// -----------------------------------------------------------------------------

@mixin button-base($white-space: $button-white-space) {
    vertical-align: middle;
    text-align: center;
    text-decoration: none;
    white-space: $white-space;
    user-select: none;
}

@mixin button-variant(
    $border-color: $button-border-color,
    $background-color: $button-background-color,
    $color: $button-color,
    $focus-border-color: $button-focus-border-color,
    $focus-background-color: $button-focus-background-color,
    $focus-color: $button-focus-color,
    $focus-box-shadow: $button-focus-box-shadow
) {
    border-color: $border-color;
    background-color: $background-color;
    color: $color;

    &:hover,
    &:focus-within {
        &:not(:disabled) {
            border-color: $focus-border-color;
            background-color: $focus-background-color;
            color: $focus-color;
            box-shadow: $focus-box-shadow;
        }
    }
}

// Checkboxs and radios
// -----------------------------------------------------------------------------

@mixin checkbox-radio-base($transition: $checkbox-radio-transition) {
    display: inline-block;
    vertical-align: middle;
    flex: 0 0 auto;
    padding: 0;
    background-position: center;
    background-origin: border-box;
    background-size: 100% 100%;
    background-repeat: no-repeat;
    user-select: none;
    transition: $transition;
    appearance: none;
    print-color-adjust: exact;
}

@mixin checkbox-radio-size(
    $width: $checkbox-radio-width,
    $height: $checkbox-radio-height,
    $border-width: $checkbox-radio-border-width
) {
    width: $width;
    height: $height;
    border-width: $border-width;
}

@mixin checkbox-radio-variant(
    $border-color: $checkbox-radio-border-color,
    $background-color: $checkbox-radio-background-color,
    $checked-border-color: $checkbox-radio-checked-border-color,
    $checked-background-color: $checkbox-radio-checked-background-color,
    $focus-box-shadow: $checkbox-radio-focus-box-shadow,
    $checked-focus-border-color: $checkbox-radio-checked-focus-border-color
) {
    border-color: $border-color;
    background-color: $background-color;

    &:focus {
        box-shadow: $focus-box-shadow;
    }

    &:checked {
        border-color: $checked-border-color;
        background-color: $checked-background-color;

        &:focus {
            border-color: $checked-focus-border-color;
        }
    }
}

// Checkboxs
// -----------------------------------------------------------------------------

@mixin checkbox-base(
    $border-radius: $checkbox-border-radius,
    $checked-background-image: $checkbox-checked-background-image,
    $indeterminate-border-color: $checkbox-indeterminate-border-color,
    $indeterminate-background-color: $checkbox-indeterminate-background-color,
    $indeterminate-background-image: $checkbox-indeterminate-background-image,
    $indeterminate-focus-border-color: $checkbox-indeterminate-focus-border-color
) {
    border-radius: $border-radius;

    &:checked {
        background-image: $checked-background-image;
    }

    &:indeterminate {
        border-color: $indeterminate-border-color;
        background-color: $indeterminate-background-color;
        background-image: $indeterminate-background-image;

        &:focus {
            border-color: $indeterminate-focus-border-color;
        }
    }
}

// Radios
// -----------------------------------------------------------------------------

@mixin radio-base($border-radius: $radio-border-radius, $checked-background-image: $radio-checked-background-image) {
    border-radius: $border-radius;

    &:checked {
        background-image: $checked-background-image;
    }
}
